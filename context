clear; clc; close all;
addpath('utils');

%% ----------- Load audio data ---------------------------------
[noisy, fs] = audioread('../data/traffic_noisy.wav');
[clean, ~] = audioread('../data/traffic_clean.wav');
noisy = audio_normalize(noisy);
clean = audio_normalize(clean);

fprintf('\nLoaded audio (%.1f sec, Fs = %d Hz)\n', length(noisy)/fs, fs);

%% ----------- Stage 1: Wiener Filter ---------------------------
fprintf('Running Wiener filtering...\n');
y_wiener = wiener_enhancement(noisy, fs);

%% ----------- Stage 2: DNN Mask Estimation ---------------------
fprintf('Running DNN enhancement...\n');
y_dnn = dnn_enhancement(noisy, clean, fs);

%% ----------- Evaluation --------------------------------------
fprintf('Evaluating metrics...\n');
results = evaluate_metrics(clean, noisy, y_wiener, y_dnn, fs);

%% ----------- Save results ------------------------------------
audiowrite('../results/enhanced_wiener.wav', y_wiener, fs);
audiowrite('../results/enhanced_dnn.wav', y_dnn, fs);
writetable(struct2table(results), '../results/metrics_table.csv');
fprintf('\nResults saved to ../results/\n');

%% ----------- Plot Spectrograms -------------------------------
figure;
subplot(3,1,1);
plotSpectrogram(noisy, fs, 'Noisy Speech');
subplot(3,1,2);
plotSpectrogram(y_wiener, fs, 'Wiener Enhanced');
subplot(3,1,3);
plotSpectrogram(y_dnn, fs, 'DNN Enhanced');
saveas(gcf, '../results/spectrograms/comparison.png');
